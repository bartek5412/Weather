{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barte\\\\Documents\\\\Visual\\\\shop\\\\src\\\\site\\\\map.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction fetchUsers() {\n  return axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => res.data);\n}\nfunction UserList() {\n  _s();\n  // Typujemy obiekt wynikowy z `useQuery`\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery([\"users\"],\n  // Klucz zapytania\n  fetchUsers,\n  // Funkcja pobierająca dane\n  {\n    keepPreviousData: true // Opcje zapytania\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (data !== null && data !== void 0 ? data : []).map((user // Użycie (data ?? []) aby mieć pewność, że data jest tablicą\n    ) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", user.address.city, \", \", user.address.street]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Company: \", user.company.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(UserList, \"Z3b93vmhJEnCPN4ovcxRGbOtffM=\", false, function () {\n  return [useQuery];\n});\n_c = UserList;\nconst Map = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gray-200 flex flex-col md:flex-row shadow-xl rounded-lg space-x-4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserList\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["useQuery","axios","jsxDEV","_jsxDEV","fetchUsers","get","then","res","data","UserList","_s","isLoading","error","keepPreviousData","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","user","name","username","email","address","city","street","company","id","_c","Map","className","_c2","$RefreshReg$"],"sources":["C:/Users/barte/Documents/Visual/shop/src/site/map.tsx"],"sourcesContent":["import { keepPreviousData, useQuery } from \"@tanstack/react-query\";\r\nimport axios from \"axios\";\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  address: {\r\n    street: string;\r\n    suite: string;\r\n    city: string;\r\n    zipcode: string;\r\n    geo: {\r\n      lat: string;\r\n      lng: string;\r\n    };\r\n  };\r\n  phone: string;\r\n  website: string;\r\n  company: {\r\n    name: string;\r\n    catchPhrase: string;\r\n    bs: string;\r\n  };\r\n}\r\n\r\nfunction fetchUsers() {\r\n  return axios\r\n    .get<User>(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((res) => res.data);\r\n}\r\nfunction UserList() {\r\n  // Typujemy obiekt wynikowy z `useQuery`\r\n  const { data, isLoading, error } = useQuery<User[], Error>(\r\n    [\"users\"], // Klucz zapytania\r\n    fetchUsers, // Funkcja pobierająca dane\r\n    {\r\n      keepPreviousData: true, // Opcje zapytania\r\n    }\r\n  );\r\n  if (isLoading) return <p>Ładowanie danych...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  return (\r\n    <div>\r\n      {(data ?? []).map(\r\n        (\r\n          user // Użycie (data ?? []) aby mieć pewność, że data jest tablicą\r\n        ) => (\r\n          <div key={user.id}>\r\n            <h2>{user.name}</h2>\r\n            <p>Username: {user.username}</p>\r\n            <p>Email: {user.email}</p>\r\n            <p>\r\n              Address: {user.address.city}, {user.address.street}\r\n            </p>\r\n            <p>Company: {user.company.name}</p>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Map: React.FC = () => {\r\n  return (\r\n    <div className=\"p-8 bg-gray-200 flex flex-col md:flex-row shadow-xl rounded-lg space-x-4\"></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,SAA2BA,QAAQ,QAAQ,uBAAuB;AAClE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA0B1B,SAASC,UAAUA,CAAA,EAAG;EACpB,OAAOH,KAAK,CACTI,GAAG,CAAO,4CAA4C,CAAC,CACvDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC;AAC5B;AACA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM;IAAEF,IAAI;IAAEG,SAAS;IAAEC;EAAM,CAAC,GAAGZ,QAAQ,CACzC,CAAC,OAAO,CAAC;EAAE;EACXI,UAAU;EAAE;EACZ;IACES,gBAAgB,EAAE,IAAI,CAAE;EAC1B,CACF,CAAC;EACD,IAAIF,SAAS,EAAE,oBAAOR,OAAA;IAAAW,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAChD,IAAIN,KAAK,EAAE,oBAAOT,OAAA;IAAAW,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC/C,oBACEf,OAAA;IAAAW,QAAA,EACG,CAACN,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,EAAE,EAAEY,GAAG,CACf,CACEC,IAAI,CAAC;IAAA,kBAELlB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAKO,IAAI,CAACC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBf,OAAA;QAAAW,QAAA,GAAG,YAAU,EAACO,IAAI,CAACE,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCf,OAAA;QAAAW,QAAA,GAAG,SAAO,EAACO,IAAI,CAACG,KAAK;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1Bf,OAAA;QAAAW,QAAA,GAAG,WACQ,EAACO,IAAI,CAACI,OAAO,CAACC,IAAI,EAAC,IAAE,EAACL,IAAI,CAACI,OAAO,CAACE,MAAM;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACJf,OAAA;QAAAW,QAAA,GAAG,WAAS,EAACO,IAAI,CAACO,OAAO,CAACN,IAAI;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAP3BG,IAAI,CAACQ,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CAET;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACR,EAAA,CA9BQD,QAAQ;EAAA,QAEoBT,QAAQ;AAAA;AAAA8B,EAAA,GAFpCrB,QAAQ;AAgCjB,MAAMsB,GAAa,GAAGA,CAAA,KAAM;EAC1B,oBACE5B,OAAA;IAAK6B,SAAS,EAAC;EAA0E;IAAAjB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEpG,CAAC;AAACe,GAAA,GAJIF,GAAa;AAMnB,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}