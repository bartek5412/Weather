{"ast":null,"code":"var _jsxFileName = \"C:\\\\tokarczuk\\\\VS_code\\\\Weather\\\\src\\\\site\\\\map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\n\n// Zaktualizowany URL z danymi geograficznymi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/datasets/geo-boundaries-world-110m/master/countries.geojson\";\nconst Map = () => {\n  _s();\n  const [geographies, setGeographies] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGeographies = async () => {\n      try {\n        const response = await fetch(geoUrl);\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setGeographies(data.features); // Zakładam, że geografie są w data.features\n      } catch (err) {\n        setError(\"Błąd\");\n      }\n    };\n    fetchGeographies();\n  }, []);\n\n  // Sprawdź, czy wystąpił błąd w pobieraniu danych\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"There was a problem fetching the data: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n\n  // Sprawdź, czy dane są ładowane\n  if (!geographies.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 35\n  }, this);\n\n  // Renderuj geografie\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    style: {\n      width: \"100%\",\n      height: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: () => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n        geography: geo\n      }, geo.properties.ADMIN, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"dek7QbHqGid/B+l/wH6ynW98ucY=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","ComposableMap","Geographies","Geography","jsxDEV","_jsxDEV","geoUrl","Map","_s","geographies","setGeographies","error","setError","fetchGeographies","response","fetch","ok","Error","data","json","features","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","width","height","geography","map","geo","properties","ADMIN","_c","$RefreshReg$"],"sources":["C:/tokarczuk/VS_code/Weather/src/site/map.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\n\r\n// Zaktualizowany URL z danymi geograficznymi\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/datasets/geo-boundaries-world-110m/master/countries.geojson\";\r\n\r\nconst Map: React.FC = () => {\r\n  const [geographies, setGeographies] = useState<any[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchGeographies = async () => {\r\n      try {\r\n        const response = await fetch(geoUrl);\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const data = await response.json();\r\n        setGeographies(data.features); // Zakładam, że geografie są w data.features\r\n      } catch (err) {\r\n        setError(\"Błąd\");\r\n      }\r\n    };\r\n\r\n    fetchGeographies();\r\n  }, []);\r\n\r\n  // Sprawdź, czy wystąpił błąd w pobieraniu danych\r\n  if (error) return <p>There was a problem fetching the data: {error}</p>;\r\n\r\n  // Sprawdź, czy dane są ładowane\r\n  if (!geographies.length) return <p>Loading...</p>;\r\n\r\n  // Renderuj geografie\r\n  return (\r\n    <ComposableMap style={{ width: \"100%\", height: \"auto\" }}>\r\n      <Geographies geography={geoUrl}>\r\n        {() =>\r\n          geographies.map((geo: any) => (\r\n            <Geography key={geo.properties.ADMIN} geography={geo} />\r\n          ))\r\n        }\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,WAAW,EAAEC,SAAS,QAAQ,mBAAmB;;AAEzE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GACV,+FAA+F;AAEjG,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAQ,EAAE,CAAC;EACzD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,MAAM,CAAC;QACpC,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCT,cAAc,CAACQ,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZT,QAAQ,CAAC,MAAM,CAAC;MAClB;IACF,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIF,KAAK,EAAE,oBAAON,OAAA;IAAAiB,QAAA,GAAG,yCAAuC,EAACX,KAAK;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;;EAEvE;EACA,IAAI,CAACjB,WAAW,CAACkB,MAAM,EAAE,oBAAOtB,OAAA;IAAAiB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAEjD;EACA,oBACErB,OAAA,CAACJ,aAAa;IAAC2B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAR,QAAA,eACtDjB,OAAA,CAACH,WAAW;MAAC6B,SAAS,EAAEzB,MAAO;MAAAgB,QAAA,EAC5BA,CAAA,KACCb,WAAW,CAACuB,GAAG,CAAEC,GAAQ,iBACvB5B,OAAA,CAACF,SAAS;QAA4B4B,SAAS,EAAEE;MAAI,GAArCA,GAAG,CAACC,UAAU,CAACC,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAAClB,EAAA,CAvCID,GAAa;AAAA6B,EAAA,GAAb7B,GAAa;AAyCnB,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}