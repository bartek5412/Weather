{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barte\\\\Documents\\\\Visual\\\\shop\\\\src\\\\site\\\\map.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n///\"https://jsonplaceholder.typicode.com/users\"\n\nconst fetchUsers = async () => {\n  const {\n    data\n  } = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n  return data;\n};\nconst useFetchUsers = () => {\n  _s();\n  return useQuery({\n    queryKey: [\"users\"],\n    queryFn: fetchUsers\n  });\n};\n_s(useFetchUsers, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nconst Map = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gray-200 flex flex-col md:flex-row shadow-xl rounded-lg space-x-4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useQuery","axios","jsxDEV","_jsxDEV","fetchUsers","data","get","useFetchUsers","_s","queryKey","queryFn","Map","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/barte/Documents/Visual/shop/src/site/map.tsx"],"sourcesContent":["import { keepPreviousData, useQuery } from \"@tanstack/react-query\";\r\nimport axios from \"axios\";\r\n\r\ninterface UserList {\r\n  id: number;\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  address: {\r\n    street: string;\r\n    suite: string;\r\n    city: string;\r\n    zipcode: string;\r\n    geo: {\r\n      lat: string;\r\n      lng: string;\r\n    };\r\n  };\r\n  phone: string;\r\n  website: string;\r\n  company: {\r\n    name: string;\r\n    catchPhrase: string;\r\n    bs: string;\r\n  };\r\n}\r\n///\"https://jsonplaceholder.typicode.com/users\"\r\n\r\nconst fetchUsers = async (): Promise<UserList[]> => {\r\n  const { data } = await axios.get<UserList[]>(\r\n    \"https://jsonplaceholder.typicode.com/users\"\r\n  );\r\n  return data;\r\n};\r\n\r\nconst useFetchUsers = () => {\r\n  return useQuery<UserList[], Error>({\r\n    queryKey: [\"users\"],\r\n    queryFn: fetchUsers,\r\n  });\r\n};\r\n\r\nconst Map: React.FC = () => {\r\n  return (\r\n    <div className=\"p-8 bg-gray-200 flex flex-col md:flex-row shadow-xl rounded-lg space-x-4\"></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,SAA2BA,QAAQ,QAAQ,uBAAuB;AAClE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAyB1B;;AAEA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAiC;EAClD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC9B,4CACF,CAAC;EACD,OAAOD,IAAI;AACb,CAAC;AAED,MAAME,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,OAAOR,QAAQ,CAAoB;IACjCS,QAAQ,EAAE,CAAC,OAAO,CAAC;IACnBC,OAAO,EAAEN;EACX,CAAC,CAAC;AACJ,CAAC;AAACI,EAAA,CALID,aAAa;EAAA,QACVP,QAAQ;AAAA;AAMjB,MAAMW,GAAa,GAAGA,CAAA,KAAM;EAC1B,oBACER,OAAA;IAAKS,SAAS,EAAC;EAA0E;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEpG,CAAC;AAACC,EAAA,GAJIN,GAAa;AAMnB,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}